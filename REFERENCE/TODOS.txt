1. learn about integrating bootstrap in angular project -- thru angular.json 
2. implement 'conditional content projection in angular' / conditional transclusion / multi-slot content projection 
    display login and signup in header as last menu items 
    display back to top in footer as first menu item 
3. implement active menu in menu.comp.html
4. implement child to parent comp communication using @ViewChild()
5. explore style binding in angular [ngStyle]
6. explore *ngIf with else 
7. explore *ngFor -- find out index and do not display NodeJS 
8. explore ngSwitch to diplay day 'Sunday' till 'Saturday', and have default case 
9. should decrement counterValue correctly in counter comp's unit testing 
10. should decrement counter and update in html when decrement btn clicked
11. counter should stop at 10 and show Maximum Reached upon increment
12. counter should stop at 0 and show Minimum Reached upon decrement
13. testing whether the button elements have css class 'btn' in counter component 
14. testing colorizer directive from concepts.comp.spec.ts 
15. testing colorizer directive with Mock Component from colorizer.directive.spec.ts 
16. Implement 404 Page Not Found 
17. Allow Max 10 Digits for Phone Number in add-employee.comp.html 
18. Disable the submit button in case of error in form in add-employee.comp.html 
19. Show the loader / spinner at first in list-employees.comp.html 
20. Show the loader / spinner at first in employee-details.comp.html 
21. Make Go Back button to work in add-employee.comp.html without routerLink 
22. phone number to accept only numbers  in add-employee.comp.html 
23. Implement ngx-toastr to show the notifications in add-employee.comp.html and employee-details.comp.html 
24. Complete Validation in Template Driven Form in employee-details.comp.html and disable the button if error in form 
25. Delete employee, the show confirmation and  redirect to employees page 
26. Explore ngTemplateOutlet
27. Explore @ContentChild 
28. Page Title should be implemented in Angular App for all urls [Try it out on Tuesday/Wednesday]
29. Negative test with empty string for ellipsis pipe 
30. Optimize menu.comp.html to avoid code duplicate
31. Experiment with async pipe in cart-view.comp.ts -- instead of unsubcribe -- try async pipe 
32. Experiment with Custom Validator
    Implement one or two custom validator in login or signup components 
33. Unit Testing Guards 
34. Unit Testing Class (unit Test the navigateTo method of navigation-helper.ts)
35. Unit Testing Interceptor
36. Work on Logout -- hide Login and Signup upon successful login and show Logout 
37. Auto-Login, Auto-Logout (after some time elapses, after logging out in one tab also)
38. Implement Lazy loading for ProductsModule, AuthModule 
39. Routing Animations 
40. implement i18n for about page 


More Reference 
---
Explore Hierarchical Injector 
  Refer: https://docs.w3cub.com/angular/guide/hierarchical-dependency-injection.html

Explore RxJS Operators -- switchMap, forkJoin
  Refer: https://www.learnrxjs.io/learn-rxjs/operators/transformation/switchmap
  Refer: https://www.learnrxjs.io/learn-rxjs/operators/combination/forkjoin

Explore Response Interceptors
  Refer: https://angular.io/api/common/http/HttpInterceptor
  Refer: https://javascript.plainenglish.io/angular-interceptors-a-complete-guide-7294e2317ecf

Explore Nested Routes / Child Routes 
  https://codecraft.tv/courses/angular/routing/nested-routes/
  https://rpbloggers.com/nested-routes-in-angular-13/
  https://tutorialstrend.com/Tutorials/Angular/angular-nested-routing.html


---






























  


